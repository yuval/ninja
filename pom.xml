<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.basistech.ninja</groupId>
  <artifactId>ninja</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>ninja</name>
  <description>Neural Networks in Java</description>
  <url>https://github.com/yuval/ninja</url>
  <packaging>pom</packaging>
  <inceptionYear>2015</inceptionYear>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
 <developers>
   <developer>
     <id>yuval</id>
     <name>Yuval Merhav</name>
     <email>yuval.mer@gmail.com</email>
   </developer>
   <developer>
     <id>joelb-git</id>
     <name>Joel Barry</name>
     <email>jmb236@gmail.com</email>
   </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:yuval/ninja.git</connection>
    <developerConnection>scm:git:git@github.com:yuval/ninja.git</developerConnection>
    <url>git@github.com:yuval/ninja.git</url>
  </scm>
  <properties>
     <compiler.fork>false</compiler.fork>
     <jdk.level>1.7</jdk.level>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     <maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
     <maven-checkstyle-plugin.version>2.13</maven-checkstyle-plugin.version>
     <maven-pmd-plugin.version>3.1</maven-pmd-plugin.version>
     <ninja.compile.source>1.7</ninja.compile.source>
     <ninja.compile.target>1.7</ninja.compile.target>
  </properties>
  <modules>
     <module>core</module>
  </modules>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>12.0</version>
      </dependency>
      <dependency>
        <groupId>org.ejml</groupId>
        <artifactId>all</artifactId>
        <version>0.27</version>
      </dependency>
      <dependency>
	<groupId>commons-cli</groupId>
	<artifactId>commons-cli</artifactId>
	<version>1.2</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.7</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.7</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <profiles>
    <profile>
      <id>sourcecheck</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <encoding>utf-8</encoding>
              <source>${ninja.compile.source}</source>
              <target>${ninja.compile.target}</target>
              <maxmem>256M</maxmem>
              <fork>${compiler.fork}</fork>
              <debug>true</debug>
              <optimize>true</optimize>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven-checkstyle-plugin.version}</version>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${maven-pmd-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fastinstall</id>
      <properties>
        <maven.test.skip>true</maven.test.skip>
        <pmd.skip>true</pmd.skip>
        <checkstyle.skip>true</checkstyle.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>nochecks</id>
      <properties>
        <pmd.skip>true</pmd.skip>
        <checkstyle.skip>true</checkstyle.skip>
      </properties>
    </profile>
  </profiles>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <id>build-classpath</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>build-classpath</goal>
              </goals>
              <configuration>
                <outputFile>${project.build.directory}/classpath.txt</outputFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <configuration>
                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                <includeTestResources>true</includeTestResources>
                <configLocation>etc/checkstyle.xml</configLocation>
                <encoding>UTF-8</encoding>
                <logViolationsToConsole>true</logViolationsToConsole>
                <failOnViolation>true</failOnViolation>
                <linkXRef>false</linkXRef>
              </configuration>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
          <configuration>
            <rules>
	      <rule ref="rulesets/java/basic.xml/BooleanInstantiation"/>
	      <rule ref="rulesets/java/basic.xml/DoubleCheckedLocking"/>
	      <rule ref="rulesets/java/basic.xml/EmptyStatementNotInLoop"/>
	      <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop"/>
	      <rule ref="rulesets/java/basic.xml/JumbledIncrementer"/>
	      <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock"/>
	      <rule ref="rulesets/java/basic.xml/UnnecessaryConversionTemporary"/>
	      <rule ref="rulesets/java/basic.xml/UnnecessaryFinalModifier"/>
	      <rule ref="rulesets/java/basic.xml/UnnecessaryReturn"/>
	      <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass"/>
	      <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod"/>
	      <rule ref="rulesets/java/design.xml/IdempotentOperations"/>
	      <rule ref="rulesets/java/design.xml/OptimizableToArrayCall"/>
	      <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons"/>
	      <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions"/>
	      <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns"/>
	      <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn"/>
	      <rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal"/>
	      <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable"/>
	      <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField"/>
	      <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod"/>
            </rules>
            <sourceEncoding>UTF-8</sourceEncoding>
            <targetJdk>${bt.compile.source}</targetJdk>
            <linkXRef>false</linkXRef>
            <includeTests>true</includeTests>
            <verbose>true</verbose>
          </configuration>
          <executions>
            <execution>
              <id>pmd</id>
              <phase>pre-integration-test</phase>
              <goals>
                <!-- explicitly configure PMD goal so  that exclusions work right.. -->
                <goal>pmd</goal>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
